{"version":3,"sources":["variables/statuses.js","components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGallery.jsx","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","components/Loader/Loader.jsx","App.js","services/searchService.js","index.js"],"names":["STATUS","PIXABAY_API_KEY","Searchbar","onSubmit","useState","searchString","setSearchString","className","e","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","target","value","ImageGallery","images","onSelect","map","id","webformatURL","largeImageURL","ImageGalleryItem","onClick","src","alt","Button","Modal","onClose","useEffect","handleEscKey","code","window","addEventListener","removeEventListener","currentTarget","Loader","color","height","width","App","page","useRef","imagesRef","status","setStatus","showButton","setShowButton","largeImageUrl","setLargeImageUrl","changeState","fetch","then","response","ok","json","Promise","reject","Error","fetchImages","current","hits","length","toast","catch","error","message","searchStr","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e15af90e.chunk.js","sourcesContent":["export const STATUS = {\r\n  IDLE: \"idle\",\r\n  LOAD: \"load\",\r\n};\r\n\r\nexport const PIXABAY_API_KEY = \"22610775-e91db881e3144bb29f97dd7d0\";\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport function Searchbar({ onSubmit }) {\r\n  const [searchString, setSearchString] = useState(\"\");\r\n\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(searchString);\r\n    setSearchString(\"\");\r\n  };\r\n  const handleOnChange = (e) => {\r\n    setSearchString(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleOnSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={handleOnChange}\r\n          value={searchString}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default Searchbar;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport { ImageGalleryItem } from \".\";\r\n\r\nexport function ImageGallery({ images, onSelect }) {\r\n  return (\r\n    <div>\r\n      <ul className=\"ImageGallery\">\r\n        {images.map(({ id, webformatURL, largeImageURL }) => (\r\n          <ImageGalleryItem\r\n            key={id}\r\n            webformatURL={webformatURL}\r\n            largeImageURL={largeImageURL}\r\n            onClick={() => onSelect(largeImageURL)}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = { images: PropTypes.array };\r\n\r\nexport default ImageGallery;\r\n","import PropTypes from \"prop-types\";\r\n\r\nexport function ImageGalleryItem({ webformatURL, largeImageURL, onClick }) {\r\n  const handleOnClick = (e) => {\r\n    onClick(largeImageURL);\r\n  };\r\n\r\n  return (\r\n    <li className=\"ImageGalleryItem\" onClick={handleOnClick}>\r\n      <img src={webformatURL} alt=\"\" className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string,\r\n  largeImageURL: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import PropTypes from \"prop-types\";\r\n\r\nexport function Button({ onClick }) {\r\n  return (\r\n    <button className=\"Button\" onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport function Modal({ largeImageURL, onClose }) {\r\n  const handleCloseModal = (e) => {\r\n    if (e.target === e.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleEscKey = (e) => {\r\n      if (e.code === \"Escape\") onClose();\r\n    };\r\n    window.addEventListener(\"keydown\", handleEscKey);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleEscKey);\r\n    };\r\n  }, [onClose]);\r\n\r\n  return (\r\n    <div className=\"Overlay\" onClick={handleCloseModal}>\r\n      <div className=\"Modal\">\r\n        <img src={largeImageURL} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func,\r\n  largeImageURL: PropTypes.string,\r\n};\r\n\r\nexport default Modal;\r\n","import LoaderSpinner from \"react-loader-spinner\";\r\nexport function Loader() {\r\n  return (\r\n    <div className=\"Overlay\">\r\n      <LoaderSpinner type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { fetchImages } from \"./services/searchService\";\r\nimport Searchbar from \"./components/Searchbar/Searchbar\";\r\nimport { ImageGallery } from \"./components/ImageGallery\";\r\nimport Button from \"./components/Button/Button\";\r\nimport Modal from \"./components/Modal/Modal\";\r\nimport Loader from \"./components/Loader/Loader\";\r\nimport { STATUS } from \"./variables/statuses\";\r\n\r\nexport default function App() {\r\n  const page = useRef(1);\r\n  const searchString = useRef(\"\");\r\n  const imagesRef = useRef([]);\r\n\r\n  const [status, setStatus] = useState(STATUS.IDLE);\r\n  const [showButton, setShowButton] = useState(false);\r\n  const [largeImageUrl, setLargeImageUrl] = useState(null);\r\n\r\n  const handleSearchbarOnSubmit = (searchStr) => {\r\n    searchString.current = searchStr;\r\n    imagesRef.current = [];\r\n    page.current = 1;\r\n    setStatus(STATUS.LOAD);\r\n  };\r\n\r\n  const handleSelectImage = (largeImageUrl) => setLargeImageUrl(largeImageUrl);\r\n\r\n  const handleCloseModal = () => setLargeImageUrl(null);\r\n\r\n  const handleClickLoadMoreButton = () => {\r\n    page.current += 1;\r\n    setStatus(STATUS.LOAD);\r\n  };\r\n\r\n  const changeState = ({ status = STATUS.IDLE, showButton }) => {\r\n    setShowButton(showButton);\r\n    setStatus(status);\r\n  };\r\n\r\n  useEffect(() => {\r\n    \r\n    if (status === STATUS.LOAD) {\r\n      fetchImages(searchString.current, page.current)\r\n        .then((images) => {\r\n          if (images.hits.length === 0 && page.current === 1) {\r\n            toast(`No images by string \"${searchString.current}\"`);\r\n            changeState({ showButton: false });\r\n\r\n            return;\r\n          }\r\n          const showButton = images.hits.length === 12;\r\n          if (!showButton) {\r\n            toast(\"It`s all\");\r\n          }\r\n          imagesRef.current = [...imagesRef.current, ...images.hits];\r\n          changeState({ showButton });\r\n        })\r\n        .catch((error) => {\r\n          toast.error(error.message);\r\n          changeState({ showButton: false });\r\n        });\r\n    }\r\n  }, [status]);\r\n\r\n  return (\r\n    <div>\r\n      <Searchbar onSubmit={handleSearchbarOnSubmit}></Searchbar>\r\n\r\n      <ImageGallery images={imagesRef.current} onSelect={handleSelectImage} />\r\n      {status === STATUS.LOAD && <Loader />}\r\n      {showButton && <Button onClick={handleClickLoadMoreButton} />}\r\n      {largeImageUrl && (\r\n        <Modal largeImageURL={largeImageUrl} onClose={handleCloseModal} />\r\n      )}\r\n      {<ToastContainer />}\r\n    </div>\r\n  );\r\n}\r\n","import { PIXABAY_API_KEY } from \"../variables/statuses\";\r\n\r\nexport const fetchImages = (searchString, page = 1) => {\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${searchString}&page=${page}&key=${PIXABAY_API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n  ).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(new Error(`No images with string \"${searchString}\"`));\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}